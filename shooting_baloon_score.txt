#include<iostream>
using namespace std;
int baloon[10], taken[10], position[10], present[10];
int N,p;
double maxscore = 0;
double iscore(int x) {
	int score = 0;
	for (int i = 0; i < N; i++) {
		if (present[i] == x) {
			if (i == (p - 1) && i != 0) {
				score=present[i - 1];
			}
			else if (i == (p - 1) && i == 0) {
				score = present[i];
			}
			else if(i != (p - 1) && i == 0) {
				score = present[i + 1];
			}
			else {
				score = present[i - 1] * present[i + 1];
			}
			for (int j = i; j < (p-1); j++) {
				present[j] = present[j+1];
			}
			p--;
			return score;
		}
	}
	//return 0;
}
void calscore(int idx) {
	int i;
	if (idx == N) {
		double totalscore = 0;
		for (int j = 0; j < N; j++) {
			totalscore=totalscore+iscore(position[j]);
			cout << position[j] << "#";
			for (int l = 0; l < p; l++) {
				cout << present[l];
			}
			cout << "#";
		}
		if (totalscore > maxscore) {
			maxscore = totalscore;
		}
		for (int k = 0; k < N; k++) {
			present[k] = baloon[k];
		}
		p = N;
		cout << totalscore << endl;
		return;
	}
	for (i = 0; i < N; i++) {
		if (taken[i] == 0) {
			taken[i] = 1;
			position[idx] = baloon[i];
			calscore(idx + 1);
			taken[i] = 0;
		}
	}
}
int main() {
	cin >> N;
	p = N;
	for (int i = 0; i <N; i++) {
		cin >> baloon[i];
		present[i] = baloon[i];
		taken[i] = 0;
		position[i] = 0;
	}
	calscore(0);
	cout << maxscore;
	system("pause");
	return 0;
}