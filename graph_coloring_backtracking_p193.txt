#include<iostream>
using namespace std;
int N;
char position[100];
char color[2] = {'W','B'};
int edges[100][100],cnt[100],bcnt,bmax=0,bl[100];
/*bool isbpossible(int j, int x) {
	for (int i = 0; i < cnt[x - 1]; i++) {
		if (position[i] == 'B') {
			return false;
		}
	}
	return true;
}*/
void generate(int idx) {
	if (idx == N) {
		int flag = 1;
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < cnt[i - 1]; j++) {
				if (position[i] == 'B' && position[edges[i][j]-1] == 'B') {
					flag = 0;
					break;
				}
			}
		}
		if (flag) {
			bcnt = 0;
			for (int i = 0; i < N; i++) {
				if (position[i] == 'B') {
					bcnt++;
				}
			}
			if (bcnt > bmax) {
				bmax = bcnt;
				bcnt = 0;
				for (int i = 0; i <= N; i++) {
					bl[i] = 0;
					if (position[i] == 'B') {
						bl[bcnt] = i+1;
						bcnt++;
					}
				}
			}
		}
		
		return;
	}
	for (int i = 0; i < 2; i++) {
		position[idx] = color[i];
		generate(idx + 1);	
	}
}
int main() {
	N = 6;
	int E = 8;
	int a, b;
	for (int i = 0; i < N; i++) {
		cnt[i] = 0;
		bl[i] = 0;
	}
	for (int i = 0; i < E; i++) {
		cin >> a >> b;
		edges[a - 1][cnt[a-1]] = b;
		cnt[a - 1]++;
		edges[b - 1][cnt[b - 1]] = a;
		cnt[b - 1]++;
	}
	/*for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			cout << edges[i][j]<< " ";
		}
		cout << endl;
	}*/
	generate(0);
	cout << bmax << " ";
	for (int i = 0; i < bmax; i++) {
		cout << bl[i];
	}
	system("pause");
	return 0;
}