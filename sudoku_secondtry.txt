#include<iostream>
#include<cstdio>
using namespace std;
int position[9][9], taken[9], z;
int board[9][9] = { { 3, 0, 6, 5, 0, 8, 4, 0, 0 },
{ 5, 2, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 8, 7, 0, 0, 0, 0, 3, 1 },
{ 0, 0, 3, 0, 1, 0, 0, 8, 0 },
{ 9, 0, 0, 8, 6, 3, 0, 0, 5 },
{ 0, 5, 0, 0, 9, 0, 6, 0, 0 },
{ 1, 3, 0, 0, 0, 0, 2, 5, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 7, 4 },
{ 0, 0, 5, 2, 0, 6, 3, 0, 0 } };

bool is_occupied(int r, int c) {
	if (board[r][c] != 0) {
		return true;
	}
	else {
		return false;
	}
}

bool is_possible(int x, int r, int c) {
	for (int i = 0; i < 9; i++) {
		if (x == position[r][i]) {
			return false;
		}
		if (x == position[i][c]) {
			return false;
		}
	}
	for (int i = (r - (r % 3)); i < ((r - (r % 3)) + 3); i++) {
		for (int j = (c - (r % 3)); j <((c - (r % 3)) + 3); j++) {
			if (x == position[i][j]) {
				return false;
			}
		}
	}
	return true;
}



void sudoku(int r, int c) {
	if (r == 9) {
		int flag = 1;
		for (int i = 0; i < 9; i++) {
			for (int j = 0; j < 9; j++) {
				if (!is_possible(position[i][j], i, j)) {
					flag = 0;
					break;
				}
			}
		}
		if (flag) {
			for (int i = 0; i < 9; i++) {
				for (int j = 0; j < 9; j++) {
					cout << position[i][j] << " ";
				}
				cout << endl;
			}
		}
		return;
	}
	if (is_occupied(r, c)) {
		position[r][c] = board[r][c];
		if (c == 8) {
			sudoku(r + 1, 0);
		}
		else {
			sudoku(r, c + 1);
		}
	}
	else {
		for (int i = 1; i < 10; i++) {
			position[r][c] = i;
			if (c == 8) {
				sudoku(r + 1, 0);
			}
			else {
				sudoku(r, c + 1);
			}
		}
	}

}

int main() {
	/*for (int i = 0; i < 9; i++) {
		for (int j = 0; j < 9; j++) {
			if (board[i][j] == 0) {
				position[i][j] = 0;
			}
			else {
				position[i][j] = board[i][j];
			}
		}
		taken[i] = 0;
	}*/

	sudoku(0, 0);
	system("pause");
	return 0;
}

